<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Spring Boot on Coding N Concepts</title><link>https://codingnconcepts.com/categories/spring-boot/</link><description>Recent content in Spring Boot on Coding N Concepts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 31 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://codingnconcepts.com/categories/spring-boot/index.xml" rel="self" type="application/rss+xml"/><item><title>application.properties vs application.yml in Spring Boot</title><link>https://codingnconcepts.com/spring-boot/spring-boot-application-properties-vs-yml/</link><pubDate>Mon, 31 Aug 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/spring-boot-application-properties-vs-yml/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll compare Spring Boot Configuration using YAML file and Property file and their advantages one over the other.&lt;/p></description></item><item><title>Jackson JSON Request and Response Mapping in Spring Boot</title><link>https://codingnconcepts.com/spring-boot/jackson-json-request-response-mapping/</link><pubDate>Thu, 02 Jul 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/jackson-json-request-response-mapping/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll learn how to map Jackson JSON request and response in Spring Boot Application with various Jackson configurations.&lt;/p></description></item><item><title>Spring @ConfigurationProperties using YAML</title><link>https://codingnconcepts.com/spring-boot/spring-configuration-properties-using-yml/</link><pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/spring-configuration-properties-using-yml/</guid><description>&lt;p>In this article, we&amp;rsquo;ll learn how to use &lt;em>@ConfigurationProperties&lt;/em> with &lt;em>.yml&lt;/em> file instead of &lt;em>.properties&lt;/em> file for configuration in Spring Boot Project.&lt;/p></description></item><item><title>Spring Initializr Plugin for Eclipse IDE</title><link>https://codingnconcepts.com/spring-boot/spring-initializr-for-eclipse-ide/</link><pubDate>Sat, 30 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/spring-initializr-for-eclipse-ide/</guid><description>&lt;p>In this article, we&amp;rsquo;ll learn how to install &lt;em>Spring Tool Plugin&lt;/em> for Eclipse IDE to create a Spring Boot Project from Scratch using Spring Initializr.&lt;/p></description></item><item><title>Spring @Controller and @RestController</title><link>https://codingnconcepts.com/spring-boot/spring-controller-vs-restcontroller/</link><pubDate>Thu, 28 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/spring-controller-vs-restcontroller/</guid><description>&lt;p>In this quick article, we&amp;rsquo;ll see &lt;em>@Controller&lt;/em> and &lt;em>@RestController&lt;/em> annotations and their difference in Spring MVC.&lt;/p></description></item><item><title>Spring @Value Annotation Guide</title><link>https://codingnconcepts.com/spring-boot/spring-value-annotation/</link><pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/spring-value-annotation/</guid><description>&lt;p>This article demonstrate use of Spring &lt;em>@Value&lt;/em> annotation with Primitives, Default value, Dates, List, Map, System Properties, Constructor Injection, Setter Injection, and Methods&amp;hellip;&lt;/p></description></item><item><title>Configure Feign Client in Spring Boot</title><link>https://codingnconcepts.com/spring-boot/configure-feign-rest-client/</link><pubDate>Tue, 26 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/configure-feign-rest-client/</guid><description>&lt;p>In this article, we&amp;rsquo;ll learn how to configure a &lt;em>Feign Client&lt;/em> in your Spring Boot project to consume RESTFul APIs from other services.&lt;/p></description></item><item><title>Build RESTFul API with Spring Boot</title><link>https://codingnconcepts.com/spring-boot/build-restful-api-with-spring-boot/</link><pubDate>Sun, 24 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/build-restful-api-with-spring-boot/</guid><description>&lt;p>In this article, we&amp;rsquo;ll learn step by step, how to build RESTFul API with Spring Boot. We&amp;rsquo;ll also learn the RestController, HTTP response codes and best practices along the way.&lt;/p></description></item><item><title>Setup a Spring Boot Project using Spring Initializr</title><link>https://codingnconcepts.com/spring-boot/setup-project-using-spring-initalizr/</link><pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/setup-project-using-spring-initalizr/</guid><description>&lt;p>In this article, we&amp;rsquo;ll learn how to create a Spring Boot project quickly from scratch use &lt;em>Spring Initializer&lt;/em>.&lt;/p></description></item><item><title>Configure embedded Jetty server in spring boot</title><link>https://codingnconcepts.com/spring-boot/configure-embedded-jetty-server/</link><pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/configure-embedded-jetty-server/</guid><description>&lt;p>Spring boot use &lt;strong>tomcat&lt;/strong> as default embedded tomcat server to run a web application but you can configure &lt;strong>jetty&lt;/strong> server to replace tomcat in easy steps.&lt;/p></description></item><item><title>Custom API Request &amp; Response Logging in spring boot.</title><link>https://codingnconcepts.com/spring-boot/custom-api-request-response-logging/</link><pubDate>Thu, 23 Apr 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/custom-api-request-response-logging/</guid><description>&lt;p>When we create RESTFul APIs in spring boot application in microservices environment. It becomes essential to log incoming API request and response and push it to centralized logging system such as Splunk or ELK for debugging. Also all the logs related to one request should have some common id to relate them. In this post we are going to solve these problems.&lt;/p></description></item><item><title>info and health endpoints in spring boot</title><link>https://codingnconcepts.com/spring-boot/configure-info-and-health-endpoints/</link><pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/configure-info-and-health-endpoints/</guid><description>&lt;p>In spring boot microservices based application, where microservices talks to each other using RESTFul APIs. We can expose some important information about microservice such as name, version, description over some endpoints say &lt;em>/info&lt;/em> and also realtime status or health over some endpoint say &lt;em>/health&lt;/em> to create application dashboards, realtime alerts, track microservice updates and so on&amp;hellip;&lt;/p></description></item><item><title>Pretty print JSON response in spring boot</title><link>https://codingnconcepts.com/spring-boot/pretty-print-json-response/</link><pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/pretty-print-json-response/</guid><description>&lt;p>When you create a Spring &lt;code>@RestController&lt;/code> in a Spring Boot application to define API endpoints then it renders JSON response by default if jackson2 is in classpath.&lt;/p>
&lt;!--
Spring uses `HttpMessageConverters` for content conversion for e.g. Java Object to JSON or XML in order to render responses from `@RestController` class methods. Spring boot provides a default `MappingJackson2HttpMessageConverter` (if jackson2 is in classpath) to render JSON response.
-->
&lt;p>JSON responses are not pretty print by default but you can enable it with just one property change.&lt;/p></description></item><item><title>Configure Kafka Producer and Consumer in spring boot</title><link>https://codingnconcepts.com/spring-boot/configure-kafka-producer-and-consumer/</link><pubDate>Sat, 11 Apr 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/configure-kafka-producer-and-consumer/</guid><description>&lt;p>This post describes how to configure Kafka producer and consumer in spring boot application and also explains how to create service classes to send and receive Kafka messages to and from configured kafka topic respectively.&lt;/p></description></item><item><title>How to configure Swagger in spring boot</title><link>https://codingnconcepts.com/spring-boot/how-to-configure-swagger/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/how-to-configure-swagger/</guid><description>&lt;p>Swagger library is useful if you are creating REST services in spring boot web application. Swagger user interface allows you to view REST services and execute &lt;em>GET, POST, PUT, DELETE&lt;/em> HTTP endpoints. This is helpful since you do not need to use Postman or some other tool to test REST Apis.&lt;/p>
&lt;p>Follow these steps to configure swagger in your spring boot application:-&lt;/p></description></item><item><title>How to create and configure custom banner in spring boot</title><link>https://codingnconcepts.com/spring-boot/how-to-create-custom-banner/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/how-to-create-custom-banner/</guid><description>&lt;p>Spring boot application comes with default banner which shows up first when you start your application.&lt;/p>
&lt;pre>&lt;code> . ____ _ __ _ _
/\\ / ___'_ __ _ _(_)_ __ __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
\\/ ___)| |_)| | | | | || (_| | ) ) ) )
' |____| .__|_| |_|_| |_\__, | / / / /
=========|_|==============|___/=/_/_/_/
:: Spring Boot :: (v2.1.3.RELEASE)
&lt;/code>&lt;/pre>&lt;p>You can replace above banner with your self made custom banner in following two easy steps:-&lt;/p></description></item><item><title>How to disable command line properties in spring boot</title><link>https://codingnconcepts.com/spring-boot/how-to-disable-command-line-properties/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/how-to-disable-command-line-properties/</guid><description>&lt;p>Spring Boot Application converts any command line arguments starting with --, such as &lt;strong>--spring.profiles.active=dev&lt;/strong> to a property by default and adds them to the Spring Environment. Command line properties always take precedence over other property sources.&lt;/p>
&lt;p>If you do not want command line properties to be added to the Environment, you can disable them from SpringBootApplication main method as follows:-&lt;/p></description></item><item><title>How to change server port in spring boot</title><link>https://codingnconcepts.com/spring-boot/how-to-change-server-port/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/how-to-change-server-port/</guid><description>&lt;p>Spring boot web application using embedded server by default runs on port 8080. Following are the ways to change default server port from &lt;strong>8080&lt;/strong> to say &lt;strong>9090&lt;/strong>&lt;/p>
&lt;p>Follow any of the given five ways to change server port:-&lt;/p></description></item><item><title>How to disable default banner in spring boot</title><link>https://codingnconcepts.com/spring-boot/how-to-disable-banner/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/spring-boot/how-to-disable-banner/</guid><description>&lt;p>You would have seen below spring boot banner when starting a spring boot application&lt;/p>
&lt;pre>&lt;code> . ____ _ __ _ _
/\\ / ___'_ __ _ _(_)_ __ __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
\\/ ___)| |_)| | | | | || (_| | ) ) ) )
' |____| .__|_| |_|_| |_\__, | / / / /
=========|_|==============|___/=/_/_/_/
:: Spring Boot :: (v2.1.3.RELEASE)
&lt;/code>&lt;/pre>&lt;p>There are multiple ways to disable spring boot banner as follows:&lt;/p></description></item><item><title>Top Spring Boot Interview Questions</title><link>https://codingnconcepts.com/top-spring-boot-interview-questions/</link><pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/top-spring-boot-interview-questions/</guid><description>&lt;p>Java developers are now switching from Spring Framework to Spring Boot for enterprise application development in microservice architecture. Spring Boot has become a trending topic to be asked in interviews from Java backend developers in 2020.&lt;/p></description></item></channel></rss>