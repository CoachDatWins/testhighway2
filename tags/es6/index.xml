<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ES6 on Coding N Concepts</title>
    <link>http://codingnconcepts.com/tags/es6/</link>
    <description>Recent content in ES6 on Coding N Concepts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 03 Apr 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://codingnconcepts.com/tags/es6/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Promises in JavaScript</title>
      <link>http://codingnconcepts.com/javascript/promises-in-javascript/</link>
      <pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>http://codingnconcepts.com/javascript/promises-in-javascript/</guid>
      <description>&lt;p&gt;Promises are introduced natively in ES6. They are very similar to our promises. As we keep or break the promise, Javascript promises are either resolve or reject. In this post we will talk about promise syntax, its different states, practical usage and different methods available to use promises.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Lexical Scope, Closures and Currying in JavaScript</title>
      <link>http://codingnconcepts.com/javascript/lexical-scope-closures-and-currying/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://codingnconcepts.com/javascript/lexical-scope-closures-and-currying/</guid>
      <description>&lt;p&gt;This post describes the &lt;a href=&#34;#lexical-scope&#34;&gt;Lexical Scope&lt;/a&gt;, &lt;a href=&#34;#closures&#34;&gt;Closures&lt;/a&gt;  and &lt;a href=&#34;#currying&#34;&gt;Currying Function&lt;/a&gt; in JavaScript and their relations with examples.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Difference in const and Object.freeze() in JavaScript</title>
      <link>http://codingnconcepts.com/javascript/const-vs-object-freeze/</link>
      <pubDate>Fri, 20 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://codingnconcepts.com/javascript/const-vs-object-freeze/</guid>
      <description>&lt;p&gt;This post describes the best practices to define constants and configuration values in JavaScript using &lt;code&gt;const&lt;/code&gt; and &lt;code&gt;Object.freeze()&lt;/code&gt; and the difference between them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Object methods in JavaScript</title>
      <link>http://codingnconcepts.com/javascript/object-methods-in-javascript/</link>
      <pubDate>Thu, 19 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://codingnconcepts.com/javascript/object-methods-in-javascript/</guid>
      <description>&lt;p&gt;This post describes the usage of various Object methods like &lt;code&gt;Object.create()&lt;/code&gt;, &lt;code&gt;Object.assign()&lt;/code&gt;, &lt;code&gt;Object.freeze()&lt;/code&gt;, &lt;code&gt;Object.seal()&lt;/code&gt; and many more available in JavaScript with examples.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Difference between var, let and const</title>
      <link>http://codingnconcepts.com/javascript/difference-between-var-let-and-const/</link>
      <pubDate>Tue, 17 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>http://codingnconcepts.com/javascript/difference-between-var-let-and-const/</guid>
      <description>&lt;p&gt;A nice feature addition in ES2015 (ES6) was the introduction of &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keywords for variable declaration. You can use &lt;code&gt;var&lt;/code&gt;, &lt;code&gt;let&lt;/code&gt; and &lt;code&gt;const&lt;/code&gt; keyword interchangeably for variable declaration though it makes a difference in terms of their scope, usage and hoisting. If you are not aware of these differences then please continue to read&amp;hellip;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>