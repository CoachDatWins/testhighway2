<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java Program on Coding N Concepts</title><link>https://codingnconcepts.com/tags/java-program/</link><description>Recent content in Java Program on Coding N Concepts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 15 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://codingnconcepts.com/tags/java-program/index.xml" rel="self" type="application/rss+xml"/><item><title>Convert Integer to Roman Numeral in Java</title><link>https://codingnconcepts.com/java/integer-to-roman/</link><pubDate>Tue, 15 Sep 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/java/integer-to-roman/</guid><description>&lt;p>&lt;strong>Problem:&lt;/strong> Given an Integer input, convert it to a Roman numeral. Input is within the range from 1 to 3999.&lt;/p></description></item><item><title>Kafka Consumer Using Java</title><link>https://codingnconcepts.com/post/apache-kafka-consumer-using-java/</link><pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/post/apache-kafka-consumer-using-java/</guid><description>&lt;p>Implementation of Kafka Consumer using Java&lt;/p></description></item><item><title>Kafka Producer Using Java</title><link>https://codingnconcepts.com/post/apache-kafka-producer-using-java/</link><pubDate>Sat, 11 May 2019 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/post/apache-kafka-producer-using-java/</guid><description>&lt;p>Implementation of Kafka Producer using Java&lt;/p></description></item><item><title>Design Elevator (Lift) in Java</title><link>https://codingnconcepts.com/java/elevator-implementation-using-java/</link><pubDate>Mon, 06 Apr 2015 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/java/elevator-implementation-using-java/</guid><description>&lt;p>Implementation of Elevator or Lift has been asked in many interviews. I have tried to implement it using muti-threading and TreeSet. TreeSet is used to store incoming request. It is a good choice here as it removes the duplicate requests and implements NavigableSet which provide you methods such as floor and ceiling.&lt;/p>
&lt;p>Elevator in this program implements following features -&lt;/p>
&lt;ul>
&lt;li>If elevator is going up or down, it checks for nearest floor request to process first in that direction.&lt;/li>
&lt;li>If there is no request to process, it waits at last processed floor.&lt;/li>
&lt;li>If a new request comes while elevator is processing a request. It process the new request first if it is nearest than the processing floor in same direction.&lt;/li>
&lt;/ul></description></item></channel></rss>