<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript Core on Coding N Concepts</title><link>https://codingnconcepts.com/tags/javascript-core/</link><description>Recent content in Javascript Core on Coding N Concepts</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 14 Jul 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://codingnconcepts.com/tags/javascript-core/index.xml" rel="self" type="application/rss+xml"/><item><title>Error Handling in JavaScript</title><link>https://codingnconcepts.com/javascript/error-handling-in-javascript/</link><pubDate>Tue, 14 Jul 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/error-handling-in-javascript/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll learn error handling using &lt;code>try&lt;/code>, &lt;code>catch&lt;/code>, and &lt;code>finally&lt;/code>. We&amp;rsquo;ll also learn about Error object, different built-in JavaScript errors and how we can create our own custom errors.&lt;/p></description></item><item><title>How to Replace all Occurrences of a String in JavaScript</title><link>https://codingnconcepts.com/javascript/how-to-replace-all-occurrences-string-javascript/</link><pubDate>Sun, 05 Jul 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/how-to-replace-all-occurrences-string-javascript/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll learn how to replace all occurrences of a string in JavaScript using &lt;code>String.replace()&lt;/code> method. We will also look at &lt;code>String.split()&lt;/code> and &lt;code>Array.join()&lt;/code> approach.&lt;/p></description></item><item><title>Math Constants and Functions in JavaScript</title><link>https://codingnconcepts.com/javascript/math-constants-and-functions-in-javascript/</link><pubDate>Sat, 04 Jul 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/math-constants-and-functions-in-javascript/</guid><description>&lt;p>In this tutorial, we&amp;rsquo;ll learn about Math Object in JavaScript, which allows us to use mathematical constants such as &lt;code>π&lt;/code>, &lt;code>e&lt;/code>, &lt;code>√2&lt;/code> and perform mathematical operations on numbers such as &lt;code>pow()&lt;/code>, &lt;code>sqrt()&lt;/code>, &lt;code>max()&lt;/code>, &lt;code>min()&lt;/code>, &lt;code>random()&lt;/code>, &lt;code>abs()&lt;/code>, &lt;code>ceil()&lt;/code>, &lt;code>floor()&lt;/code>, &lt;code>round()&lt;/code>, and &lt;code>truc()&lt;/code>.&lt;/p></description></item><item><title>How to Capitalize First Letter of String in JavaScript</title><link>https://codingnconcepts.com/javascript/how-to-capitalize-first-letter-of-string-in-javascript/</link><pubDate>Fri, 19 Jun 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/how-to-capitalize-first-letter-of-string-in-javascript/</guid><description>&lt;p>In this quick tutorial, we&amp;rsquo;ll learn how to capitalize the first letter of a String in JavaScript.&lt;/p></description></item><item><title>Difference in == and === comparison operators in JavaScript</title><link>https://codingnconcepts.com/javascript/comparison-operators-in-javascript/</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/comparison-operators-in-javascript/</guid><description>&lt;p>This is frequently asked question in JavaScript interview. We can compare primitive types, array and object using two comparison operators &lt;code>==&lt;/code> and &lt;code>===&lt;/code> available in JavaScript. This post describes the difference between these two with many examples.&lt;/p></description></item><item><title>Understand all about this keyword in JavaScript</title><link>https://codingnconcepts.com/javascript/this-keyword-in-javascript/</link><pubDate>Thu, 26 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/this-keyword-in-javascript/</guid><description>&lt;p>The &lt;code>this&lt;/code> keyword in JavaScript is very important concept but at the same time very confusing to understand.&lt;/p></description></item><item><title>Understand call, bind and apply methods in JavaScript</title><link>https://codingnconcepts.com/javascript/call-vs-bind-vs-apply/</link><pubDate>Wed, 25 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/call-vs-bind-vs-apply/</guid><description>&lt;p>This is frequently asked question in JavaScript interview. This post describes the Function prototype methods &lt;code>call()&lt;/code>, &lt;code>apply()&lt;/code> and &lt;code>bind()&lt;/code> with their syntax, usage and practical examples.&lt;/p></description></item><item><title>Lexical Scope, Closures and Currying in JavaScript</title><link>https://codingnconcepts.com/javascript/lexical-scope-closures-and-currying/</link><pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/lexical-scope-closures-and-currying/</guid><description>&lt;p>This post describes the &lt;a href="#lexical-scope">Lexical Scope&lt;/a>, &lt;a href="#closures">Closures&lt;/a> and &lt;a href="#currying">Currying Function&lt;/a> in JavaScript and their relations with examples.&lt;/p></description></item><item><title>Virtual Dom vs Shadow Dom</title><link>https://codingnconcepts.com/javascript/virtual-dom-vs-shadow-dom/</link><pubDate>Thu, 13 Jun 2019 00:00:00 +0000</pubDate><guid>https://codingnconcepts.com/javascript/virtual-dom-vs-shadow-dom/</guid><description>&lt;p>This post explains the DOM, Virtual DOM and Shadow DOM concepts and their differences&amp;hellip;&lt;/p></description></item></channel></rss>