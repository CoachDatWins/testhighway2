<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Spring Boot Basics on Coding N Concepts</title>
    <link>https://codingnconcepts.com/tags/spring-boot-basics/</link>
    <description>Recent content in Spring Boot Basics on Coding N Concepts</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 27 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://codingnconcepts.com/tags/spring-boot-basics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring @Value Annotation</title>
      <link>https://codingnconcepts.com/spring-boot/spring-value-annotation/</link>
      <pubDate>Wed, 27 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/spring-value-annotation/</guid>
      <description>&lt;p&gt;This article demonstrate use of Spring &lt;em&gt;@Value&lt;/em&gt; annotation with Primitives, Default value, Dates, List, Map, System Properties, Constructor Injection, Setter Injection, and Methods&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Setup a Spring Boot Project using Spring Initializr</title>
      <link>https://codingnconcepts.com/spring-boot/setup-project-using-spring-initalizr/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/setup-project-using-spring-initalizr/</guid>
      <description>&lt;p&gt;This article shows -  &lt;strong&gt;How to setup a Spring Boot project using Spring Initalizr&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Configure embedded Jetty server in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/configure-embedded-jetty-server/</link>
      <pubDate>Sat, 25 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/configure-embedded-jetty-server/</guid>
      <description>&lt;p&gt;Spring boot use &lt;strong&gt;tomcat&lt;/strong&gt; as default embedded tomcat server to run a web application but you can configure &lt;strong&gt;jetty&lt;/strong&gt; server to replace tomcat in easy steps.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>info and health endpoints in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/configure-info-and-health-endpoints/</link>
      <pubDate>Mon, 20 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/configure-info-and-health-endpoints/</guid>
      <description>&lt;p&gt;In spring boot microservices based application, where microservices talks to each other using RESTFul APIs. We can expose some important information about microservice such as name, version, description over some endpoints say &lt;em&gt;/info&lt;/em&gt; and also realtime status or health over some endpoint say &lt;em&gt;/health&lt;/em&gt; to create application dashboards, realtime alerts, track microservice updates and so on&amp;hellip;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Pretty print JSON response in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/pretty-print-json-response/</link>
      <pubDate>Mon, 13 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/pretty-print-json-response/</guid>
      <description>&lt;p&gt;When you create a Spring &lt;code&gt;@RestController&lt;/code&gt; in a Spring Boot application to define API endpoints then it renders JSON response by default if jackson2 is in classpath.&lt;/p&gt;
&lt;!--
Spring uses `HttpMessageConverters` for content conversion for e.g. Java Object to JSON or XML in order to render responses from `@RestController` class methods. Spring boot provides a default `MappingJackson2HttpMessageConverter` (if jackson2 is in classpath) to render JSON response.
--&gt;
&lt;p&gt;JSON responses are not pretty print by default but you can enable it with just one property change.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to create and configure custom banner in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/how-to-create-custom-banner/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/how-to-create-custom-banner/</guid>
      <description>&lt;p&gt;Spring boot application comes with default banner which shows up first when you start your application.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  .   ____          _            __ _ _
 /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  &#39;  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.3.RELEASE)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can replace above banner with your self made custom banner in following two easy steps:-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to disable command line properties in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/how-to-disable-command-line-properties/</link>
      <pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/how-to-disable-command-line-properties/</guid>
      <description>&lt;p&gt;Spring Boot Application converts any command line arguments starting with --, such as &lt;strong&gt;--spring.profiles.active=dev&lt;/strong&gt; to a property by default and adds them to the Spring Environment. Command line properties always take precedence over other property sources.&lt;/p&gt;
&lt;p&gt;If you do not want command line properties to be added to the Environment, you can disable them from SpringBootApplication main method as follows:-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to change server port in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/how-to-change-server-port/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/how-to-change-server-port/</guid>
      <description>&lt;p&gt;Spring boot web application using embedded server by default runs on port 8080. Following are the ways to change default server port from &lt;strong&gt;8080&lt;/strong&gt; to say &lt;strong&gt;9090&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Follow any of the given five ways to change server port:-&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to disable default banner in spring boot</title>
      <link>https://codingnconcepts.com/spring-boot/how-to-disable-banner/</link>
      <pubDate>Mon, 09 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://codingnconcepts.com/spring-boot/how-to-disable-banner/</guid>
      <description>&lt;p&gt;You would have seen below spring boot banner when starting a spring boot application&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  .   ____          _            __ _ _
 /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  &#39;  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.1.3.RELEASE)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are multiple ways to disable spring boot banner as follows:&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>